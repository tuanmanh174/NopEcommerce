@model CustomerBackInStockSubscriptionsModel

@using Nop.Core.Domain.Catalog 

@{
    Layout = "_ColumnsTwo";

    //title
    NopHtml.AddTitleParts(T("PageTitle.BackInStockSubscriptions").Text);
    //page class
    NopHtml.AppendPageCssClassParts("html-account-page");
    NopHtml.AppendPageCssClassParts("html-back-in-stock-subscription-list-page");

}
@*page title*@
@section Breadcrumb
{
    <div class="page-title">
        <div class="container">
            <div class="content">
                <h1>@T("Account.MyAccount") - @T("Account.BackInStockSubscriptions")</h1>
            </div>
        </div>
    </div>
}
@section left
{
    @await Component.InvokeAsync(typeof(CustomerNavigationViewComponent), new { selectedTabId = CustomerNavigationEnum.BackInStockSubscriptions })
}
<div class="page account-page back-in-stock-subscription-list-page">
    <div class="page-body">
        @await Component.InvokeAsync(typeof(WidgetViewComponent), new { widgetZone = PublicWidgetZones.CustomerBackInStockSubscriptionsTop, additionalData = Model })
        <div class="row">
            <div class="col-md-12 col-lg-12">
                @if (Model.Subscriptions.Count > 0)
                {
                    <div class="description">
                        @T("Account.BackInStockSubscriptions.Description")
                    </div>
                    <script asp-location="Footer">
                        $(function () {
                            $('#selectall').on('click', function () {
                                $('.subscription-list .rowcheckbox').prop('checked', $(this).is(':checked')).trigger('change');
                            });

                            $('.subscription-list .rowcheckbox').on('change', function (e) {
                                var numChkBoxes = $('.subscription-list .rowcheckbox').length;
                                var numChkBoxesChecked = $('.subscription-list .rowcheckbox:checked').length;
                                $('#selectall').prop('checked', numChkBoxes == numChkBoxesChecked && numChkBoxes > 0);
                            });
                        });
                    </script>
                    <form asp-route="CustomerBackInStockSubscriptions" method="post">
                        <div class="subscription-list">
                            <div class="table-wrapper table-responsive">
                                <table class="data-table table">
                                    <colgroup>
                                        <col width="1" />
                                        <col />
                                    </colgroup>
                                    <thead>
                                        <tr>
                                            <th class="select-boxes">
                                                <div class="custom-control custom-checkbox">
                                                    <input type="checkbox" class="custom-control-input" id="selectall">
                                                    <label class="custom-control-label" for="selectall"></label>
                                                </div>
                                            </th>
                                            <th class="product">
                                                @T("Account.BackInStockSubscriptions.ProductColumn")
                                            </th>
                                        </tr>
                                    </thead>
                                    <tbody>
                                        @for (var i = 0; i < Model.Subscriptions.Count; i++)
                                        {
                                            var item = Model.Subscriptions[i];
                                            <tr @(i % 2 == 0 ? Html.Raw(" class=\"odd\"") : Html.Raw(" class=\"even\""))>
                                                <td class="select-boxes">
                                                    <div class="custom-control custom-checkbox">
                                                        <input type="checkbox" name="biss@(item.Id)" class="rowcheckbox custom-control-input" id="biss@(item.Id)">
                                                        <label class="custom-control-label" for="biss@(item.Id)"></label>
                                                    </div>
                                                </td>
                                                <td class="product">
                                                    <a href="@(Url.RouteUrl<Product>(new { SeName = item.SeName }))">@item.ProductName</a>
                                                </td>
                                            </tr>
                                        }
                                    </tbody>
                                </table>
                            </div>
                            @{
                                var pager = await Html.PagerAsync(Model.PagerModel);
                            }
                            @if (!string.IsNullOrEmpty(await pager.RenderHtmlContentAsync()))
                            {
                                <div class="pager Page navigation">
                                    @pager
                                </div>
                            }
                            <div class="buttons">
                                <button type="submit" name="save" class="button-1 btn btn-primary delete-selected-biss-button">@T("Account.BackInStockSubscriptions.DeleteSelected")</button>
                            </div>
                        </div>
                    </form>
                }
                else
                {
                    <div class="no-data">
                        <div class="box-shadow-container">
                            <div class="box-content">
                                <div class="box-symbol text-center"><i class="fal fa-boxes"></i></div>
                                <div class="box-title text-center">@T("Account.BackInStockSubscriptions.NoSubscriptions")</div>
                            </div>
                        </div>
                    </div>
                }
                @await Component.InvokeAsync(typeof(WidgetViewComponent), new { widgetZone = PublicWidgetZones.CustomerBackInStockSubscriptionsBottom, additionalData = Model })
            </div>
        </div>
    </div>
</div>