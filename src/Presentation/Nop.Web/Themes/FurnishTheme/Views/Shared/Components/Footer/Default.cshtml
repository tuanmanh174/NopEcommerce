@model FooterModel
@using Nop.Core
@using Nop.Core.Domain.Tax
@using Nop.Services.Configuration
@using Nop.Core.Domain.Topics

@inject IWorkContext workContext
@inject IStoreContext storeContext
@inject ISettingService settingService
@{
    var storeId = (await storeContext.GetCurrentStoreAsync()).Id;
    var aboutUs = await settingService.GetSettingAsync("furnishthemesettings.aboutus", storeId, true);
    var address = await settingService.GetSettingAsync("furnishthemesettings.address", storeId, true);
    var contactNo = await settingService.GetSettingAsync("furnishthemesettings.phone", storeId, true);
    var removeCopyright = await settingService.GetSettingByKeyAsync("furnishthemesettings.isremoveddesignedby", false, storeId, true);
    var removeDesignedBy = await settingService.GetSettingByKeyAsync("furnishthemesettings.isremovedcopyright", false, storeId, true);
    var isDisableToTop = await settingService.GetSettingByKeyAsync("furnishthemesettings.isdisabletotop", false, storeId, true);
    //var footerLogoUrl = await Component.InvokeAsync("Widget", new { widgetZone = "FooterLogo" });
    var footerLogoUrl = await Component.InvokeAsync(typeof(WidgetViewComponent), new { widgetZone = "FooterLogo" });
    
}
<footer>
    <div class="footer">           
        <div class="container">
            @await Component.InvokeAsync(typeof(NewsletterBoxViewComponent))
            <div class="footer-upper">
                <div class="row">
                    <div class="block information col-sm-6 col-md-3 col-lg-3 col-xl-3">
                        <div class="title">
                            <strong>@T("Footer.Information")</strong>
                        </div>
                        <ul class="listbox">
                            @if (Model.SitemapEnabled && Model.DisplaySitemapFooterItem)
                            {
                                <li><a href="@Url.RouteUrl("Sitemap")">@T("Sitemap")</a></li>
                            }
                            @foreach (var topic in Model.Topics.Where(x => x.IncludeInFooterColumn1).ToList())
                            {
                                <li><a href="@(Url.RouteUrl<Topic>(new { SeName = topic.SeName }))">@topic.Name</a></li>
                            }
                            @if (Model.DisplayContactUsFooterItem)
                            {
                                <li><a href="@Url.RouteUrl("ContactUs")">@T("ContactUs")</a></li>
                            }
                        </ul>
                    </div>
                    <div class="block customer-service col-sm-6 col-md-3 col-lg-3 col-xl-3">
                        <div class="title">
                            <strong>@T("Footer.CustomerService")</strong>
                        </div>
                        <ul class="listbox">
                            @if (Model.SearchEnabled && Model.DisplayProductSearchFooterItem)
                            {
                                <li><a href="@Url.RouteUrl("ProductSearch")">@T("Search")</a></li>
                            }
                            @if (Model.NewsEnabled && Model.DisplayNewsFooterItem)
                            {
                                <li><a href="@Url.RouteUrl("NewsArchive")">@T("News")</a></li>
                            }
                            @if (Model.BlogEnabled && Model.DisplayBlogFooterItem)
                            {
                                <li><a href="@Url.RouteUrl("Blog")">@T("Blog")</a></li>
                            }
                            @if (Model.ForumEnabled && Model.DisplayForumsFooterItem)
                            {
                                <li><a href="@Url.RouteUrl("Boards")">@T("Forum.Forums")</a></li>
                            }
                            @if (Model.RecentlyViewedProductsEnabled && Model.DisplayRecentlyViewedProductsFooterItem)
                            {
                                <li><a href="@Url.RouteUrl("RecentlyViewedProducts")">@T("Products.RecentlyViewedProducts")</a></li>
                            }
                            @if (Model.CompareProductsEnabled && Model.DisplayCompareProductsFooterItem)
                            {
                                <li><a href="@Url.RouteUrl("CompareProducts")">@T("Products.Compare.List")</a></li>
                            }
                            @if (Model.NewProductsEnabled && Model.DisplayNewProductsFooterItem)
                            {
                                <li><a href="@Url.RouteUrl("NewProducts")">@T("Products.NewProducts")</a></li>
                            }
                            @foreach (var topic in Model.Topics.Where(x => x.IncludeInFooterColumn2).ToList())
                            {
                                <li><a href="@(Url.RouteUrl<Topic>(new { SeName = topic.SeName }))">@topic.Name</a></li>
                            }
                            @if (Model.AllowCustomersToCheckGiftCardBalance)
                            {
                                <li><a href="@Url.RouteUrl("CheckGiftCardBalance")">@T("CheckGiftCardBalance")</a></li>
                            }
                        </ul>
                    </div>
                    <div class="block my-account col-sm-6 col-md-3 col-lg-3 col-xl-3">
                        <div class="title">
                            <strong>@T("Footer.MyAccount")</strong>
                        </div>
                        <ul class="listbox">
                            @if (Model.DisplayCustomerInfoFooterItem)
                            {
                                <li><a href="@Url.RouteUrl("CustomerInfo")">@T("Account.MyAccount")</a></li>
                            }
                            @if (Model.DisplayCustomerOrdersFooterItem)
                            {
                                <li><a href="@Url.RouteUrl("CustomerOrders")">@T("Account.CustomerOrders")</a></li>
                            }
                            @if (Model.DisplayCustomerAddressesFooterItem)
                            {
                                <li><a href="@Url.RouteUrl("CustomerAddresses")">@T("Account.CustomerAddresses")</a></li>
                            }
                            @if (Model.ShoppingCartEnabled && Model.DisplayShoppingCartFooterItem)
                            {
                                <li><a href="@Url.RouteUrl("ShoppingCart")">@T("ShoppingCart")</a></li>
                            }
                            @if (Model.WishlistEnabled && Model.DisplayWishlistFooterItem)
                            {
                                <li><a href="@Url.RouteUrl("Wishlist")">@T("Wishlist")</a></li>
                            }
                            @if (Model.AllowCustomersToApplyForVendorAccount && Model.DisplayApplyVendorAccountFooterItem)
                            {
                                <li><a href="@Url.RouteUrl("ApplyVendorAccount")">@T("Vendors.ApplyAccount")</a></li>
                            }
                            @foreach (var topic in Model.Topics.Where(x => x.IncludeInFooterColumn3).ToList())
                            {
                                <li><a href="@(Url.RouteUrl<Topic>(new { SeName = topic.SeName }))">@topic.Name</a></li>
                            }
                        </ul>
                    </div>
                    <div class="block follow-us col-xs-12 col-md-12 col-lg-3 col-xl-3">
                        <div class="title">
                            <strong>@T("Footer.FollowUs")</strong>
                        </div>
                        <div class="social">
                            @await Component.InvokeAsync(typeof(SocialButtonsViewComponent))
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <div class="footer-lower">
            <div class="container">
                <div class="row">
                    <div class="col-xs-12 col-sm-12 col-md-4 col-lg-4 col-xl-4">
                        @if (!removeCopyright)
                        {
                            @if (!Model.HidePoweredByNopCommerce)
                            {
                                <div class="footer-powered-by">

                                    Powered by <a href="@(OfficialSite.Main)" target="_blank" @(Model.IsHomePage ? string.Empty : "rel=nofollow")>nopCommerce</a>
                                </div>
                            }
                        }
                        @await Component.InvokeAsync(typeof(StoreThemeSelectorViewComponent))
                    </div>
                    <div class="copyright col-xs-12 col-sm-12 col-md-4 col-lg-4 col-xl-4">
                        @*Would you like to remove the "Powered by nopCommerce" link in the bottom of the footer?
                        Please find more info at https://www.nopcommerce.com/copyrightremoval.aspx*@
                        
                        @if (Model.DisplayTaxShippingInfoFooter)
                        {
                            var inclTax = await workContext.GetTaxDisplayTypeAsync() == TaxDisplayType.IncludingTax;
                            <span class="footer-tax-shipping">
                                @T(inclTax ? "Footer.TaxShipping.InclTax" : "Footer.TaxShipping.ExclTax", Url.RouteTopicUrl("shippinginfo"))
                            </span>
                        }
                        <span class="footer-disclaimer">@T("Content.CopyrightNotice", DateTime.Now.Year, Model.StoreName)</span><br />
                    </div>
                    <div class="col-xs-12 col-sm-12 col-md-4 col-lg-4 col-xl-4">
                        <div class="bydesigned pull-right">
                            <div class="footer-theme-credit my-1"><a href="http://themes.nopaccelerate.com/themes/furnish-theme/" target="_blank" title="Responsive Furnish Theme for nopCommerce">nopAccelerate Furnish Theme</a></div>
                            <div class="footer-designedby">Theme by <a target="_blank" href="http://www.nopaccelerate.com/">nopAccelerate</a></div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        @await Component.InvokeAsync(typeof(WidgetViewComponent), new { widgetZone = PublicWidgetZones.Footer, additionalData = Model })
    </div>
</footer>
@if(isDisableToTop)
{
    <button type="button" class="btn btn-floating btn-lg btn-back-to-top" id="btn-back-to-top">
        <i class="fas fa-arrow-up"></i>
    </button>
    <script asp-location="Footer" type="text/javascript">
        $(function () {
            //Get the button
            let mybutton = document.getElementById('btn-back-to-top');

            // When the user scrolls down 20px from the top of the document, show the button
            window.onscroll = function () {
                scrollFunction();
            };

            function scrollFunction() {
                if (
                    document.body.scrollTop > 20 ||
                    document.documentElement.scrollTop > 20
                ) {
                    mybutton.style.display = "block";
                } else {
                    mybutton.style.display = "none";
                }
            }
            // When the user clicks on the button, scroll to the top of the document
            mybutton.addEventListener("click", backToTop);

            function backToTop() {
                document.body.scrollTop = 0;
                document.documentElement.scrollTop = 0;
            }
        });
    </script>
}