@model ChangePasswordModel

@{
    Layout = "_ColumnsTwo";

    //title
    NopHtml.AddTitleParts(T("PageTitle.Account").Text);
    //page class
    NopHtml.AppendPageCssClassParts("html-account-page");
    NopHtml.AppendPageCssClassParts("html-change-password-page");
    var returnUrl = Context.Request.Query["returnUrl"];
}

@*page title*@
@section Breadcrumb
{
    <div class="page-title">
        <div class="container">
            <div class="content">
                <h1>@T("Account.MyAccount") - @T("Account.ChangePassword")</h1>
            </div>
        </div>
    </div>
}

@section left
{
    @await Component.InvokeAsync(typeof(CustomerNavigationViewComponent), new { selectedTabId = CustomerNavigationEnum.ChangePassword })
}

<div class="page account-page change-password-page">
    <div class="page-body">
        @await Component.InvokeAsync(typeof(WidgetViewComponent), new { widgetZone = PublicWidgetZones.CustomerChangePasswordTop, additionalData = Model })
        <form asp-route="CustomerChangePassword" method="post" autocomplete="off" asp-route-returnurl="@returnUrl">
            <div class="row">
                <div class="col-12 col-sm-12 col-md-12 offset-lg-2 col-lg-8 offset-xl-3 col-xl-6">
                    <div asp-validation-summary="ModelOnly" class="message-error"></div>
                    <div class="fieldset">
                        <div class="form-fields">
                            <div class="form-group">
                                <div class="warnings">
                                    @if (Model.PasswordExpired)
                                    {
                                        <p>@T("Account.ChangePassword.PasswordIsExpired")</p>
                                    }
                                    @if (Model.PasswordMustBeChanged)
                                    {
                                        <p>@T("Account.ChangePassword.MustBeChanged")</p>
                                    }
                                </div>
                                <div class="row">
                                    <label asp-for="OldPassword" class="col-xs-12 col-sm-12 col-md-4 col-lg-4 col-form-label" asp-postfix=":"></label>
                                    <div class="col-xs-12 col-sm-12 col-md-12 col-lg-12">
                                        <input asp-for="OldPassword" class="form-control" placeholder="Old password" />
                                        <nop-required />
                                        <span asp-validation-for="OldPassword"></span>
                                    </div>
                                </div>
                                <div class="row">
                                    <label asp-for="NewPassword" class="col-xs-12 col-sm-12 col-md-4 col-lg-4 col-form-label" asp-postfix=":"></label>
                                    <div class="col-xs-12 col-sm-12 col-md-12 col-lg-12">
                                        <input asp-for="NewPassword" class="form-control" placeholder="New password" />
                                        <div class="change-password-recovery-link">
                                            <a asp-route="PasswordRecovery">@T("Account.Login.ForgotPassword")</a>
                                        </div>
                                        <nop-required />
                                        <span asp-validation-for="NewPassword"></span>
                                    </div>
                                </div>
                                <div class="row">
                                    <label asp-for="ConfirmNewPassword" class="col-xs-12 col-sm-12 col-md-4 col-lg-4 col-form-label" asp-postfix=":"></label>
                                    <div class="col-xs-12 col-sm-12 col-md-12 col-lg-12">
                                        <input asp-for="ConfirmNewPassword" class="form-control" placeholder="Confirm New password" />
                                        <nop-required />
                                        <span asp-validation-for="ConfirmNewPassword"></span>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="buttons">
                        <button type="submit" class="button-1 btn btn-primary change-password-button">@T("Account.ChangePassword.Button")</button>
                    </div>
                </div>
            </div>
        </form>
        @await Component.InvokeAsync(typeof(WidgetViewComponent), new { widgetZone = PublicWidgetZones.CustomerChangePasswordBottom, additionalData = Model })
    </div>
</div>