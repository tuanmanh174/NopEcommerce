@model IList<CustomerAttributeModel>
@using Nop.Core.Domain.Catalog
@using Nop.Services.Customers

<div class="custom-attributes abc form-group">
    <div class="row">
        @foreach (var attribute in Model)
        {
            var controlId = $"{NopCustomerServicesDefaults.CustomerAttributePrefix}{attribute.Id}";
            var textPrompt = attribute.Name;
            <div class="col-12 col-sm-12 col-md-6 col-lg-6 col-xl-6">
                <div class="row">
                    <label class="col-xs-12 col-sm-12 col-md-4 col-lg-4 col-form-label">@textPrompt:</label>
                    <div class="col-12 col-sm-12 col-md-12 col-lg-12 col-xl-12">
                        @switch (attribute.AttributeControlType)
                        {
                            case AttributeControlType.DropdownList:
                                {
                                    <select name="@(controlId)" id="@(controlId)" class="form-control">
                                        @if (!attribute.IsRequired)
                                        {
                                            <option value="0">---</option>
                                        }
                                        @foreach (var attributeValue in attribute.Values)
                                        {
                                            <option selected="@attributeValue.IsPreSelected" value="@attributeValue.Id">@attributeValue.Name</option>
                                        }
                                    </select>
                                }
                                break;
                            case AttributeControlType.RadioList:
                                {
                                    <label class="option-label col-form-label">@textPrompt:</label>
                                    <ul class="option-list">
                                        @foreach (var attributeValue in attribute.Values)
                                        {
                                            <li class="custom-radio-attribute">
                                                <div class="custom-control custom-radio" for="@(controlId)_@(attributeValue.Id)">
                                                    <input id="@(controlId)_@(attributeValue.Id)" type="radio" class="custom-control-input" name="@(controlId)" value="@attributeValue.Id" checked="@attributeValue.IsPreSelected" />
                                                    <label class="custom-control-label" for="@(controlId)_@(attributeValue.Id)">@attributeValue.Name</label>
                                                </div>
                                            </li>
                                        }
                                    </ul>
                                }
                                break;
                            case AttributeControlType.Checkboxes:
                            case AttributeControlType.ReadonlyCheckboxes:
                                {
                                    <label class="option-label col-form-label">@textPrompt:</label>
                                    <ul class="option-list">
                                        @foreach (var attributeValue in attribute.Values)
                                        {
                                            <li class="custom-radio-attribute">
                                                <div class="custom-control custom-checkbox" for="@(controlId)_@(attributeValue.Id)">
                                                    <input id="@(controlId)_@(attributeValue.Id)" type="checkbox" class="custom-control-input" name="@(controlId)" value="@attributeValue.Id" checked="@attributeValue.IsPreSelected" @(attribute.AttributeControlType == AttributeControlType.ReadonlyCheckboxes ? Html.Raw(" disabled=\"disabled\"") : null) />
                                                    <label class="custom-control-label" for="@(controlId)_@(attributeValue.Id)">@attributeValue.Name</label>
                                                </div>
                                            </li>
                                        }
                                    </ul>
                                }
                                break;
                            case AttributeControlType.TextBox:
                                {
                                    <input name="@(controlId)" type="text" class="textbox form-control" id="@(controlId)" value="@(attribute.DefaultValue)" placeholder="@textPrompt" />
                                }
                                break;
                            case AttributeControlType.MultilineTextbox:
                                {
                                    <textarea id="@(controlId)" rows="5" class="form-control" name="@(controlId)" placeholder="@textPrompt">@(attribute.DefaultValue)</textarea>

                                }
                                break;
                            case AttributeControlType.Datepicker:
                            case AttributeControlType.FileUpload:
                            case AttributeControlType.ColorSquares:
                            case AttributeControlType.ImageSquares:
                                {
                                    //not support attribute type
                                }
                                break;
                        }
                        @if (attribute.IsRequired)
                        {
                            <nop-required />
                        }
                    </div>
                </div>
            </div>
        }
    </div>
</div>