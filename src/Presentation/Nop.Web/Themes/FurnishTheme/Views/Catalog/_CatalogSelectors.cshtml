@model CatalogProductsModel

@if (Model.Products.Count <= 0 &&
    !Model.PriceRangeFilter.Enabled &&
    !Model.SpecificationFilter.Enabled &&
    !Model.ManufacturerFilter.Enabled)
{
    return;
}

<div class="product-selectors clearfix">
    <div class="row">
        @*sorting*@
        @if (Model.AllowProductSorting)
        {
            <div class="product-sorting col-4 col-sm-5 col-md-4 col-lg-4 col-xl-4">
                <div class="product-span">
                    <span class="float-left">@T("Catalog.OrderBy")</span>
                </div>
                @Html.DropDownList("products-orderby", Model.AvailableSortOptions, new { @class = "form-control dropdown-filter", aria_label = T("Catalog.OrderBy.Label") })
            </div>
            <script asp-location="Footer">
                $(function () {
                    var $orderByEl = $('#products-orderby');
                    $orderByEl.on('change', function () {
                        CatalogProducts.getProducts();
                    });

                    $(CatalogProducts).on('before', function (e) {
                        e.payload.urlBuilder
                            .addParameter('orderby', $orderByEl.val());
                    });
                });
            </script>
        }
        @*page size*@
        @if (Model.AllowCustomersToSelectPageSize)
        {
            <div class="product-page-size col-3 col-sm-4 col-md-5 col-lg-6 col-xl-5 d-flex">
                <div class="product-span">
                    <span>@T("Catalog.PageSize")</span>
                </div>
                @Html.DropDownList("products-pagesize", Model.PageSizeOptions, new { @class = "form-control dropdown-filter", aria_label = T("Catalog.PageSize.Label") })
                <div class="product-span">
                    <span>@T("Catalog.PageSize.PerPage")</span>
                </div>
            </div>
            <script asp-location="Footer">
                $(function () {
                    var $pageSizeEl = $('#products-pagesize');
                    $pageSizeEl.on('change', function () {
                        CatalogProducts.getProducts();
                    });

                    $(CatalogProducts).on('before', function (e) {
                        e.payload.urlBuilder
                            .addParameter('pagesize', $pageSizeEl.val());
                    });
                });
            </script>
        }

        <div class="mobile-filter-button col-2 col-sm-1 col-md-1 d-lg-none" onclick="openFilter()">
            <a class="filter-button"><i class="fas fa-filter"></i></a>
        </div>
        @*view mode*@
        @if (Model.AllowProductViewModeChanging)
        {
            <div class="product-viewmode col-3 col-sm-2 col-md-2 col-lg-2 col-xl-3">
                @if (Model.AvailableViewModes.Count > 1)
                {
                    var gridMode = Model.AvailableViewModes[0];
                    var listMode = Model.AvailableViewModes[1];
                    <div class="grid-list-icon">
                        <a class="viewmode-icon grid @if (gridMode.Selected){<text>selected</text>}" data-viewmode="@gridMode.Value" title="@gridMode.Text" tabindex="0" aria-role="button" href="#"><i class="fas fa-th"></i>@*@gridMode.Text*@</a>
                        <a class="viewmode-icon list @if (listMode.Selected){<text>selected</text>}" data-viewmode="@listMode.Value" title="@listMode.Text" tabindex="0" aria-role="button" href="#"><i class="fas fa-list-ul"></i>@*@listMode.Text*@</a>
                    </div>
                }
            </div>
            <script asp-location="Footer">
                $(function () {
                    var $viewModeEls = $('[data-viewmode]');
                    $viewModeEls.on('click', function () {
                        if (!$(this).hasClass('selected')) {
                            $viewModeEls.toggleClass('selected');
                            CatalogProducts.getProducts();
                        }
                        return false;
                    });

                    $(CatalogProducts).on('before', function (e) {
                        var $viewModeEl = $('[data-viewmode].selected');
                        if ($viewModeEl) {
                            e.payload.urlBuilder
                                .addParameter('viewmode', $viewModeEl.data('viewmode'));
                        }
                    });
                });
            </script>
        }
    </div>
</div>
<script asp-location="Footer">
    function openFilter() {
        document.getElementById("mobile-filter").classList.add("open");
    }
    function closeFilter() {
        document.getElementById("mobile-filter").classList.remove("open");
    }
    if ($(".block-product-filter").length) {
        $(".mobile-filter-button").removeClass("nop-filter");
    }
    else {
        $(".mobile-filter-button").addClass("nop-filter");
    }
</script>